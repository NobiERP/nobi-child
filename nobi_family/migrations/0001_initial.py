# Generated by Django 3.0.3 on 2020-03-11 09:49

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import nobi_family.models
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('number', models.CharField(max_length=15, verbose_name='Number')),
                ('street', models.CharField(max_length=255, verbose_name='Street')),
                ('zip', models.PositiveIntegerField(verbose_name='ZIP')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('department', models.CharField(max_length=255, verbose_name='Department')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ('country', 'department', 'zip', 'city', 'street', 'number'),
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
                'ordering': ('name', 'created'),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('status', model_utils.fields.StatusField(choices=[('in_progress', 'In progress'), ('archived', 'Archived')], default='in_progress', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='First name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last name')),
                ('alive', models.BooleanField(default=True, verbose_name='Alive')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone')),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Mobile phone')),
                ('professional_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Professional phone')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=nobi_family.models.Person.upload_picture, verbose_name='Picture')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('gender', model_utils.fields.StatusField(choices=[('man', 'Man'), ('woman', 'Woman'), ('boy', 'Boy'), ('girl', 'Girl'), ('other', 'Other'), ('unknown', 'Unknown')], default='man', max_length=100, no_check_for_status=True, null=True, verbose_name='Gender')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nobi_family_person_related', related_query_name='nobi_family_persons', to='nobi_family.Address', verbose_name='Address')),
                ('children', models.ManyToManyField(blank=True, related_name='_person_children_+', related_query_name='nobi_family_persons', to='nobi_family.Person', verbose_name='Children')),
                ('couple', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nobi_family_person_related', related_query_name='nobi_family_persons', to='nobi_family.Person', verbose_name='Couple')),
                ('fraternities', models.ManyToManyField(blank=True, related_name='_person_fraternities_+', related_query_name='nobi_family_persons', to='nobi_family.Person', verbose_name='Fraternities')),
                ('languages', models.ManyToManyField(blank=True, related_name='nobi_family_person_related', related_query_name='nobi_family_persons', to='nobi_family.Language', verbose_name='Languages')),
                ('parents', models.ManyToManyField(blank=True, related_name='_person_parents_+', related_query_name='nobi_family_persons', to='nobi_family.Person', verbose_name='Parents')),
            ],
            options={
                'verbose_name': 'Person',
                'ordering': ('first_name', 'last_name'),
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('persons', models.ManyToManyField(related_name='family_person', to='nobi_family.Person')),
            ],
            options={
                'verbose_name': 'Family',
                'verbose_name_plural': 'Families',
            },
        ),
    ]
